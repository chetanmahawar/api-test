[
  {
    "info": {
      "_postman_id": "429bda74-79f3-41fa-b598-878b039c9416",
      "name": "12",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:52.000Z",
      "createdAt": "2024-11-15T17:15:51.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-429bda74-79f3-41fa-b598-878b039c9416"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c763b287-6e9f-42a5-b05a-90b5525f45cb",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-c763b287-6e9f-42a5-b05a-90b5525f45cb"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "908d93f4-c3ef-4224-a061-4177d33ed3eb",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-908d93f4-c3ef-4224-a061-4177d33ed3eb"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "913bb7a8-21c8-44f9-a33e-bd9ef75835cf",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-913bb7a8-21c8-44f9-a33e-bd9ef75835cf"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b714cdc4-e67c-43c6-aaa7-50d81b73f951",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-b714cdc4-e67c-43c6-aaa7-50d81b73f951"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "3bcafecc-0bba-4493-897e-38d827b498b2",
      "name": "13",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:53.000Z",
      "createdAt": "2024-11-15T17:15:52.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-3bcafecc-0bba-4493-897e-38d827b498b2"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "9452634c-62f1-413f-b007-bf416bfe808e",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-9452634c-62f1-413f-b007-bf416bfe808e"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "f7b68bbb-5446-4827-a9b3-d4477c184a42",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-f7b68bbb-5446-4827-a9b3-d4477c184a42"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "1be1fc05-8dfe-4133-a574-f1b5d98775a1",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-1be1fc05-8dfe-4133-a574-f1b5d98775a1"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d37b46f7-5cde-4de6-aa2b-c38b71d1e6d4",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-d37b46f7-5cde-4de6-aa2b-c38b71d1e6d4"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "4cdbf745-dd47-483b-a8cb-693f183113f8",
      "name": "14",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:53.000Z",
      "createdAt": "2024-11-15T17:15:52.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-4cdbf745-dd47-483b-a8cb-693f183113f8"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5aa584be-58ef-4e6b-932e-c6447b5de15c",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-5aa584be-58ef-4e6b-932e-c6447b5de15c"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "cd3a94e3-781a-4ae9-84df-bea68c4244ea",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-cd3a94e3-781a-4ae9-84df-bea68c4244ea"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "d80194fe-b022-4114-891b-50f410e7947f",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-d80194fe-b022-4114-891b-50f410e7947f"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b3760772-11e1-496b-8044-ecf5f379000c",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-b3760772-11e1-496b-8044-ecf5f379000c"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "8c7d5b66-802a-45a7-bb6a-f9fd172fca26",
      "name": "15",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:53.000Z",
      "createdAt": "2024-11-15T17:15:52.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-8c7d5b66-802a-45a7-bb6a-f9fd172fca26"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "bc724bca-260f-461e-ae56-8c8500d1830b",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-bc724bca-260f-461e-ae56-8c8500d1830b"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "f70f2066-23b3-46d6-9a26-4e6e711eaf0c",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-f70f2066-23b3-46d6-9a26-4e6e711eaf0c"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "a47edde5-49e2-4b03-b2ca-37b45eefe105",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-a47edde5-49e2-4b03-b2ca-37b45eefe105"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "ac21ce2a-3bb3-490b-b3f0-d1277e99f9d7",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-ac21ce2a-3bb3-490b-b3f0-d1277e99f9d7"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "ce06330d-cb69-4734-a577-2dc64b0261dd",
      "name": "16",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:53.000Z",
      "createdAt": "2024-11-15T17:15:53.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-ce06330d-cb69-4734-a577-2dc64b0261dd"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "8c5de3d1-750d-4b3e-8d50-b50e573f4b77",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-8c5de3d1-750d-4b3e-8d50-b50e573f4b77"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "cab89712-3ca6-43d3-89c4-59bfdfe940d0",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-cab89712-3ca6-43d3-89c4-59bfdfe940d0"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "a3d81085-cc3f-4b1c-a1ec-6a0892ae99e2",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-a3d81085-cc3f-4b1c-a1ec-6a0892ae99e2"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "6f1c52fe-3b12-4e89-a3d5-218d35486c39",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-6f1c52fe-3b12-4e89-a3d5-218d35486c39"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "2ec7b256-ad81-4ab4-b685-ffd60f4e75e0",
      "name": "FntlCustomers",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:53.000Z",
      "createdAt": "2024-11-15T17:15:52.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-2ec7b256-ad81-4ab4-b685-ffd60f4e75e0"
    },
    "item": [
      {
        "name": "post customer",
        "id": "1799487f-6354-453c-8887-fc518a48d0d3",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "test",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\" : \"hello\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:3000/api/users/login",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "3000",
            "path": [
              "api",
              "users",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "19388008-1799487f-6354-453c-8887-fc518a48d0d3"
      },
      {
        "name": "post customer new",
        "id": "8ba299c8-f1dc-4f73-9406-453ffee2635d",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "test",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\" : \"hello\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:3000/api/users/log",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "3000",
            "path": [
              "api",
              "users",
              "log"
            ]
          }
        },
        "response": [],
        "uid": "19388008-8ba299c8-f1dc-4f73-9406-453ffee2635d"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "2b3483d5-6f71-431d-baf0-70d1edd99fac",
      "name": "FntlProjects",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:15:52.000Z",
      "createdAt": "2024-11-15T17:15:52.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-2b3483d5-6f71-431d-baf0-70d1edd99fac"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "ba923dec-7ed3-4782-ad2a-494d46ff65c0",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "19388008-ba923dec-7ed3-4782-ad2a-494d46ff65c0"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "b473b8e2-c2d3-4bdf-9806-d90ae41f482b",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "19388008-b473b8e2-c2d3-4bdf-9806-d90ae41f482b"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "c754ed34-481a-4bd4-9875-b7b55e43f618",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-c754ed34-481a-4bd4-9875-b7b55e43f618"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "508d21ac-47c7-4286-8afe-cf2d3c10ead7",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "19388008-508d21ac-47c7-4286-8afe-cf2d3c10ead7"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "a08cce34-0961-4d3c-b496-bd9f2a4e38ff",
      "name": "test1",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:16:17.000Z",
      "createdAt": "2024-11-15T17:16:06.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-a08cce34-0961-4d3c-b496-bd9f2a4e38ff"
    },
    "item": [
      {
        "name": "get 1",
        "id": "80abf6eb-389d-4503-ac59-65861922a2e8",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": []
        },
        "response": [],
        "uid": "19388008-80abf6eb-389d-4503-ac59-65861922a2e8"
      }
    ]
<<<<<<< Updated upstream
=======
  },
  {
    "info": {
      "_postman_id": "0a18185f-0f9f-4951-a10d-036152518ef9",
      "name": "test2",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:18:42.000Z",
      "createdAt": "2024-11-15T17:18:35.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-0a18185f-0f9f-4951-a10d-036152518ef9"
    },
    "item": [
      {
        "name": "test2",
        "id": "93a25bc9-03ad-4d78-95eb-60b56a17d87b",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": []
        },
        "response": [],
        "uid": "19388008-93a25bc9-03ad-4d78-95eb-60b56a17d87b"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "5c025d20-47e4-4f30-832e-1da2da08a97d",
      "name": "test3",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-15T17:21:02.000Z",
      "createdAt": "2024-11-15T17:20:54.000Z",
      "lastUpdatedBy": "19388008",
      "uid": "19388008-5c025d20-47e4-4f30-832e-1da2da08a97d"
    },
    "item": [
      {
        "name": "test3",
        "id": "883ab31c-c0a6-4659-80bf-5425a3b9ad09",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": []
        },
        "response": [],
        "uid": "19388008-883ab31c-c0a6-4659-80bf-5425a3b9ad09"
      }
    ]
>>>>>>> Stashed changes
  }
]