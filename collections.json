[
  {
    "info": {
      "_postman_id": "328595b8-825d-4161-b9ed-380cc387f848",
      "name": "FntlCustomers",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-14T23:53:20.000Z",
      "createdAt": "2024-11-14T23:51:47.000Z",
      "lastUpdatedBy": "39752485",
      "uid": "39752485-328595b8-825d-4161-b9ed-380cc387f848"
    },
    "item": [
      {
        "name": "post customer",
        "id": "8a61a46d-898c-464e-86f3-6b057b22ce4f",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "test",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\" : \"hello\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:3000/api/users/login",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "3000",
            "path": [
              "api",
              "users",
              "login"
            ]
          }
        },
        "response": [],
        "uid": "39752485-8a61a46d-898c-464e-86f3-6b057b22ce4f"
      },
      {
        "name": "post customer new",
        "id": "93cd9dd3-e379-4704-b7d5-31a08a0622a9",
        "protocolProfileBehavior": {
          "disableBodyPruning": true
        },
        "request": {
          "method": "GET",
          "header": [
            {
              "key": "Authorization",
              "value": "test",
              "type": "text"
            }
          ],
          "body": {
            "mode": "raw",
            "raw": "{\n    \"name\" : \"hello\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "http://localhost:3000/api/users/log",
            "protocol": "http",
            "host": [
              "localhost"
            ],
            "port": "3000",
            "path": [
              "api",
              "users",
              "log"
            ]
          }
        },
        "response": [],
        "uid": "39752485-93cd9dd3-e379-4704-b7d5-31a08a0622a9"
      }
    ]
  },
  {
    "info": {
      "_postman_id": "9b95db38-5075-41c2-9651-71f6544a2ed2",
      "name": "FntlProjects",
      "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
      "updatedAt": "2024-11-14T23:51:48.000Z",
      "createdAt": "2024-11-14T23:51:48.000Z",
      "lastUpdatedBy": "39752485",
      "uid": "39752485-9b95db38-5075-41c2-9651-71f6544a2ed2"
    },
    "item": [
      {
        "name": "Get data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Status code is 200\", function () {",
                "    pm.response.to.have.status(200);",
                "});"
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "614e9748-1ecb-495e-8a8c-a90f9343d66d",
        "request": {
          "method": "GET",
          "header": [],
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a GET request and it is used to \"get\" data from an endpoint. There is no request body for a GET request, but you can use query parameters to help specify the resource you want data on (e.g., in this request, we have `id=1`).\n\nA successful GET response will have a `200 OK` status, and should include some kind of response body - for example, HTML web content or JSON data."
        },
        "response": [],
        "uid": "39752485-614e9748-1ecb-495e-8a8c-a90f9343d66d"
      },
      {
        "name": "Post data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful POST request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "0a203b43-1b7c-45c1-ac23-f8301788df17",
        "request": {
          "method": "POST",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ]
          },
          "description": "This is a POST request, submitting data to an API via the request body. This request submits JSON data, and the data is reflected in the response.\n\nA successful POST request typically returns a `200 OK` or `201 Created` response code."
        },
        "response": [],
        "uid": "39752485-0a203b43-1b7c-45c1-ac23-f8301788df17"
      },
      {
        "name": "Update data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful PUT request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "cbd8f733-3881-44ac-8f31-718ce87b5930",
        "request": {
          "method": "PUT",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "{\n\t\"name\": \"Add your name in the body\"\n}",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a PUT request and it is used to overwrite an existing piece of data. For instance, after you create an entity with a POST request, you may want to modify that later. You can do that using a PUT request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful PUT request typically returns a `200 OK`, `201 Created`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "39752485-cbd8f733-3881-44ac-8f31-718ce87b5930"
      },
      {
        "name": "Delete data",
        "event": [
          {
            "listen": "test",
            "script": {
              "exec": [
                "pm.test(\"Successful DELETE request\", function () {",
                "    pm.expect(pm.response.code).to.be.oneOf([200, 202, 204]);",
                "});",
                ""
              ],
              "type": "text/javascript"
            }
          }
        ],
        "id": "5c8dba45-2b33-462e-9a28-d6817c96fd40",
        "request": {
          "method": "DELETE",
          "header": [],
          "body": {
            "mode": "raw",
            "raw": "",
            "options": {
              "raw": {
                "language": "json"
              }
            }
          },
          "url": {
            "raw": "{{base_url}}/info?id=1",
            "host": [
              "{{base_url}}"
            ],
            "path": [
              "info"
            ],
            "query": [
              {
                "key": "id",
                "value": "1"
              }
            ]
          },
          "description": "This is a DELETE request, and it is used to delete data that was previously created via a POST request. You typically identify the entity being updated by including an identifier in the URL (eg. `id=1`).\n\nA successful DELETE request typically returns a `200 OK`, `202 Accepted`, or `204 No Content` response code."
        },
        "response": [],
        "uid": "39752485-5c8dba45-2b33-462e-9a28-d6817c96fd40"
      }
    ]
  }
]